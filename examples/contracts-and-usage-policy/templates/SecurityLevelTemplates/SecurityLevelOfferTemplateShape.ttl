@prefix dct: <http://purl.org/dc/terms/> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix ids: <https://w3id.org/idsa/core/> .
@prefix idsc: <https://w3id.org/idsa/code/> .
@prefix idsm: <https://w3id.org/idsa/metamodel/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix shapes: <https://github.com/International-Data-Spaces-Association/InformationModel/master/examples/contract-and-usage-policy/templates/> .


shapes:SecurityLevelOfferTemplateShape
    a sh:NodeShape ;
    sh:targetClass ids:SecurityOffer ;
    sh:node shapes:HasProviderOrConsumerNodeShape ;
    sh:property shapes:SecurityLevelOfferTemplate-permissionPropertyShape ;
    sh:message "<https://raw.githubusercontent.com/International-Data-Spaces-Association/InformationModel/master/examples/contract-and-usage-policy/templates/SecurityLevelOfferTemplates/SecurityLevelOfferTemplateShape.ttl> (SecurityLevelOfferTemplateShape): In a _:SecurityOffer a) the ids:provider property must point to one participant or b) the ids:consumer property must point to one participant or c) the ids:provider and the ids:consumer must point to one participant. This can in any case be a) an IRI or b) an ids:Participant. The ids:permission property must point to at exactly one ids:Permission. In the ids:Permission the ids:target and ids:action properties and at least one of (ids:assigner or ids:assignee) pointing to a participant have to be specified. There must be one ids:constraint properties pointing to an ids:LogicalConstraint. Within the ids:LogicalConstraint there must be one to three ids:or properties pointing to one ids:Constraint each. At least one ids:Constraint must be specified where the ids:leftOperand must point to idsc:SECURITY_LEVEL, the ids:operator must point to idsc:SAME_AS and the ids:rightOperandReference must point to idsc:TRUST_PLUS_SECURITY_PROFILE. Within the other two possible ids:Constraints the ids:leftOperand must also point to idsc:SECURITY_LEVEL and the ids:operator must point to idsc:SAME_AS. For one ids:Constraint the ids:rightOperandReference can point to idsc:TRUST_SECURITY_PROFILE, the other can point to idsc:BASE_SECURITY_PROFILE. If the idsc:BASE_SECURITY_PROFILE is present, the idsc:TRUST_SECURITY_PROFILE must also be present."@en ;
.


shapes:SecurityLevelOfferTemplate-permissionPropertyShape
    a sh:PropertyShape ;
    sh:path ids:permission ;
    sh:class ids:Permission ;
    sh:node shapes:SecurityLevelOfferPermissionTemplateShape ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:severity sh:Violation ;
    sh:message "<https://raw.githubusercontent.com/International-Data-Spaces-Association/InformationModel/master/examples/contract-and-usage-policy/templates/SecurityLevelOfferTemplates/SecurityLevelOfferTemplateShape.ttl> (SecurityLevelOfferTemplateShape-permissionPropertyShape): In a _:SecurityOffer the ids:permission property must point to at exactly one ids:Permission. In the ids:Permission the ids:target and ids:action properties and at least one of (ids:assigner or ids:assignee) pointing to a participant have to be specified. There must be one ids:constraint properties pointing to an ids:LogicalConstraint. Within the ids:LogicalConstraint there must be one to three ids:or properties pointing to one ids:Constraint each. At least one ids:Constraint must be specified where the ids:leftOperand must point to idsc:SECURITY_LEVEL, the ids:operator must point to idsc:SAME_AS and the ids:rightOperandReference must point to idsc:TRUST_PLUS_SECURITY_PROFILE. Within the other two possible ids:Constraints the ids:leftOperand must also point to idsc:SECURITY_LEVEL and the ids:operator must point to idsc:SAME_AS. For one ids:Constraint the ids:rightOperandReference can point to idsc:TRUST_SECURITY_PROFILE, the other can point to idsc:BASE_SECURITY_PROFILE. If the idsc:BASE_SECURITY_PROFILE is present, the idsc:TRUST_SECURITY_PROFILE must also be present."@en ;
.


shapes:SecurityLevelOfferPermissionTemplateShape
    a sh:NodeShape ;
    sh:node shapes:HasAssignerOrAssigneeNodeShape ;
    sh:property shapes:PermissionTemplate-targetPropertyShape ;
    sh:property shapes:PermissionTemplate-actionPropertyShape ;
    sh:property shapes:SecurityLevelPermissionTemplate-constraintPropertyShape ;
.
